name: üß† Infinito CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Install CPU-only PyTorch for CI
        pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test imports and basic functionality
      run: |
        python -c "import numpy, torch, scipy; print('‚úÖ Core dependencies OK')"
        python -c "from infinito_gpu_optimized import PrincipioTodoRecursivo; print('‚úÖ Main module imports OK')"
        python -c "import quick_start; print('‚úÖ Quick start module OK')"
    
    - name: Run quick validation test
      run: |
        python -c "
        from infinito_gpu_optimized import PrincipioTodoRecursivo
        import torch
        
        # Test basic initialization on CPU
        pt = PrincipioTodoRecursivo(size=32, max_depth=5)
        print(f'Device: {pt.device}')
        
        # Test single recursion
        phi = pt._input_bin()
        phi_new = pt._one_recursion(phi)
        
        print(f'‚úÖ Single recursion test passed')
        print(f'Phi shape: {phi_new.shape}')
        print(f'Phi max: {torch.max(phi_new).item():.6f}')
        print(f'Recursion count: {pt.recursion}')
        "

  docs:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Generate documentation
      run: |
        echo "üìö Documentation generation would go here"
        echo "Consider adding Sphinx or MkDocs in the future"
    
    - name: Update README stats
      run: |
        echo "üìä README stats update would go here"
        echo "Could auto-update badges, latest results, etc."

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: üß† Infinito ${{ github.ref }}
        body: |
          ## üöÄ New Release of Infinito
          
          Evolutionary Artificial Consciousness Simulator
          
          ### ‚ú® What's New
          - Check the commit history for detailed changes
          - Performance improvements
          - Bug fixes and stability enhancements
          
          ### üìä Latest Results
          - Updated consciousness metrics
          - Enhanced evolutionary algorithms
          - Improved visualization dashboard
          
          ### üõ†Ô∏è Installation
          ```bash
          pip install -r requirements.txt
          python quick_start.py
          ```
          
          **Full Changelog**: https://github.com/webtilians/principiodelTodo/compare/${{ github.event.before }}...${{ github.ref }}
        draft: false
        prerelease: false