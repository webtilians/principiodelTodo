#!/usr/bin/env python3
"""
üß† INFINITO - CONFIGURACI√ìN AVANZADA
====================================

Ejemplo de configuraci√≥n avanzada del sistema INFINITO
con par√°metros optimizados para casos espec√≠ficos.
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'src'))

from infinito_v3_clean import InfinitoV3Clean

def high_performance_config():
    """Configuraci√≥n para m√°ximo rendimiento"""
    
    print("üöÄ INFINITO - Configuraci√≥n Alto Rendimiento")
    print("="*60)
    
    infinito = InfinitoV3Clean(
        grid_size=128,              # Grid m√°s grande para mayor complejidad
        max_iterations=2000,        # M√°s iteraciones para convergencia
        target_consciousness=0.95,  # Target alto
        learning_rate=0.0005,       # Learning rate m√°s conservador
        update_interval=50,         # Updates menos frecuentes
        save_checkpoints=True       # Guardar checkpoints
    )
    
    return infinito.run_consciousness_experiment()

def quick_test_config():
    """Configuraci√≥n para pruebas r√°pidas"""
    
    print("‚ö° INFINITO - Configuraci√≥n R√°pida")
    print("="*45)
    
    infinito = InfinitoV3Clean(
        grid_size=32,               # Grid peque√±o
        max_iterations=50,          # Pocas iteraciones
        target_consciousness=0.70,  # Target m√°s bajo
        learning_rate=0.01,         # Learning rate m√°s agresivo
        update_interval=10          # Updates frecuentes
    )
    
    return infinito.run_consciousness_experiment()

def research_config():
    """Configuraci√≥n para investigaci√≥n experimental"""
    
    print("üî¨ INFINITO - Configuraci√≥n Experimental")
    print("="*50)
    
    infinito = InfinitoV3Clean(
        grid_size=256,              # Grid muy grande
        max_iterations=5000,        # Muchas iteraciones
        target_consciousness=0.99,  # Target muy alto
        learning_rate=0.0001,       # Learning rate muy conservador
        update_interval=100,        # Updates espor√°dicos
        save_checkpoints=True,      # Checkpoints para experimentos largos
        enable_advanced_metrics=True  # M√©tricas adicionales
    )
    
    return infinito.run_consciousness_experiment()

def main():
    """Ejecutar configuraci√≥n seleccionada"""
    
    configs = {
        '1': ("Alto Rendimiento", high_performance_config),
        '2': ("Prueba R√°pida", quick_test_config),
        '3': ("Experimental", research_config)
    }
    
    print("üß† INFINITO - Configuraciones Disponibles:")
    for key, (name, _) in configs.items():
        print(f"   {key}. {name}")
    
    choice = input("\nSelecciona configuraci√≥n (1-3): ").strip()
    
    if choice in configs:
        name, config_func = configs[choice]
        print(f"\nüéØ Ejecutando configuraci√≥n: {name}")
        results = config_func()
        print(f"\n‚úÖ Experimento '{name}' completado!")
    else:
        print("‚ùå Selecci√≥n inv√°lida")

if __name__ == "__main__":
    main()